#!/bin/bash

echo "This script will ERASE this host's osds from the cluster" \
     "and make new ones with the bluestore format"
read -p "Are you sure you want to proceed? (y/n): " -r

case $REPLY in
  y ) echo "Starting osd removal operation.";;
  * ) echo "Exiting..."; exit 0;;
esac

set -x

yes 'will cite' | parallel --bibtex > /dev/null 2>&1

disks=($(ceph-disk list | grep 'ceph data' | awk '{ print substr($1, 0, length($1)-1) }'))
osds=($(ceph-disk list | grep -oP '(?<=osd\.)[0-9]+'))

out_and_destroy()
{
  osd_block=$1
  osd_id=$2

  if [[ -z $osd_id  ]]; then
    return 1
  fi

  ceph osd out $osd_id
  while ! ceph osd safe-to-destroy $osd_id; do sleep 1 ; done
  systemctl stop ceph-osd@$osd_id

  sleep 5

  if mount | grep -qP "/var/lib/ceph/osd/ceph-$osd_id\b"
  then
    umount /var/lib/ceph/osd/ceph-$osd_id || exit 1
  fi

  ceph osd destroy $osd_id --yes-i-really-mean-it || exit 1
  ceph-volume lvm zap $osd_block || exit 1
}
export -f out_and_destroy

create_new_osd()
{
  osd_block=$1
  osd_id=$2

  ceph-volume lvm create --bluestore --data $osd_block --osd-id $osd_id || exit 1
  ceph osd in $osd_id || exit 1
}
export -f create_new_osd

parallel --xapply out_and_destroy ::: ${disks[@]} ::: ${osds[@]}
parallel --xapply create_new_osd  ::: ${disks[@]} ::: ${osds[@]}
